// <auto-generated />
using System;
using DemoProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DemoProject.Migrations
{
    [DbContext(typeof(EducationContext))]
    [Migration("20240327014354_RemoveStudentIDFromStudent")]
    partial class RemoveStudentIDFromStudent
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_general_ci")
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("DemoProject.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<int?>("ProgramId")
                        .HasColumnType("int(11)")
                        .HasColumnName("program_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ProgramId" }, "program_id");

                    b.ToTable("course");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Code = "EXSM3931",
                            Name = "Introduction to Web Development",
                            ProgramId = -1
                        });
                });

            modelBuilder.Entity("DemoProject.Models.Enrollment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Grade")
                        .HasColumnType("char(1)")
                        .HasColumnName("grade");

                    b.Property<int?>("SectionId")
                        .HasColumnType("int(11)")
                        .HasColumnName("section_id");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int(11)")
                        .HasColumnName("student_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "SectionId" }, "section_id");

                    b.HasIndex(new[] { "StudentId" }, "student_id");

                    b.ToTable("enrollment");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            SectionId = -1,
                            StudentId = -1
                        });
                });

            modelBuilder.Entity("DemoProject.Models.Program", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("program");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Name = "Fullstack Web Application Development"
                        });
                });

            modelBuilder.Entity("DemoProject.Models.Section", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CourseId")
                        .HasColumnType("int(11)")
                        .HasColumnName("course_id");

                    b.Property<string>("DaysOffered")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("days_offered");

                    b.Property<int?>("SemesterId")
                        .HasColumnType("int(11)")
                        .HasColumnName("semester_id");

                    b.Property<TimeOnly?>("TimeOffered")
                        .HasColumnType("time")
                        .HasColumnName("time_offered");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CourseId" }, "course_id");

                    b.HasIndex(new[] { "SemesterId" }, "semester_id");

                    b.ToTable("section");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            CourseId = -1,
                            DaysOffered = "MR",
                            SemesterId = -1,
                            TimeOffered = new TimeOnly(19, 0, 0)
                        });
                });

            modelBuilder.Entity("DemoProject.Models.Semester", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("end_date");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("semester");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            EndDate = new DateOnly(2024, 4, 26),
                            Name = "Winter 2024",
                            StartDate = new DateOnly(2024, 1, 8)
                        });
                });

            modelBuilder.Entity("DemoProject.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("Birthdate")
                        .HasColumnType("date")
                        .HasColumnName("birthdate");

                    b.Property<string>("Firstname")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("firstname");

                    b.Property<string>("Lastname")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("lastname");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("student");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Birthdate = new DateOnly(1990, 1, 1),
                            Firstname = "John",
                            Lastname = "Doe"
                        });
                });

            modelBuilder.Entity("DemoProject.Models.Course", b =>
                {
                    b.HasOne("DemoProject.Models.Program", "Program")
                        .WithMany("Courses")
                        .HasForeignKey("ProgramId")
                        .HasConstraintName("course_ibfk_1");

                    b.Navigation("Program");
                });

            modelBuilder.Entity("DemoProject.Models.Enrollment", b =>
                {
                    b.HasOne("DemoProject.Models.Section", "Section")
                        .WithMany("Enrollments")
                        .HasForeignKey("SectionId")
                        .HasConstraintName("enrollment_ibfk_2");

                    b.HasOne("DemoProject.Models.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("enrollment_ibfk_1");

                    b.Navigation("Section");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("DemoProject.Models.Section", b =>
                {
                    b.HasOne("DemoProject.Models.Course", "Course")
                        .WithMany("Sections")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("section_ibfk_1");

                    b.HasOne("DemoProject.Models.Semester", "Semester")
                        .WithMany("Sections")
                        .HasForeignKey("SemesterId")
                        .HasConstraintName("section_ibfk_2");

                    b.Navigation("Course");

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("DemoProject.Models.Course", b =>
                {
                    b.Navigation("Sections");
                });

            modelBuilder.Entity("DemoProject.Models.Program", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("DemoProject.Models.Section", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("DemoProject.Models.Semester", b =>
                {
                    b.Navigation("Sections");
                });

            modelBuilder.Entity("DemoProject.Models.Student", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
